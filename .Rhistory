comparison_df <- data.frame(
Model = c("Basic", "Comprehensive", "Stepwise"),
R_squared = c(summary(fit.basic)$r.squared,
summary(fit.comprehensive)$r.squared,
summary(fit.step)$r.squared)
)
# all library load statements here
library(caret)
library(knitr)
library(scales)
r.version <- "4.3.2"
seed.val <- 123456
cars.df <- read.csv("dataset3-3.csv")
cars.df <- na.omit(cars.df)
cars.df$seller_type <- factor(cars.df$seller_type)
cars.df$transmission <- factor(cars.df$transmission)
cars.df$owner <- factor(cars.df$owner,
levels = c("First Owner", "Second Owner", "Third Owner", "Fourth & Above Owner"))
cars.df$seats <- factor(cars.df$seats)
sum_stats <- summary(cars.df$selling_price)
summary_tbl <- data.frame(Statistic = names(sum_stats),
Value = as.numeric(sum_stats))
summary_tbl$Value <- format(summary_tbl$Value, scientific = FALSE, big.mark = ",")
kable(summary_tbl, caption = "Summary Statistics for Selling Price")
hist(cars.df$selling_price, freq = FALSE,
main = "",
xlab = "Selling Price (USD)",
breaks = 20,
axes = FALSE)
axis(1, at = axTicks(1), labels = comma(axTicks(1)))
axis(2)
lines(density(cars.df$selling_price), col = "blue", lwd = 2)
seller_freq <- table(cars.df$seller_type)
seller_pct <- prop.table(seller_freq) * 100
seller_tbl <- data.frame(Seller_Type = names(seller_freq),
Count = as.numeric(seller_freq),
Percentage = round(as.numeric(seller_pct), 2))
kable(seller_tbl, caption = "Distribution of Seller Types")
barplot(seller_freq,
xlab = "Seller Type",
ylab = "Frequency",
axes = FALSE)
axis(2)
transmission.freq <- table(cars.df$transmission)
transmission.ptc <- prop.table(transmission.freq) * 100
transmission.tbl <- data.frame(Transmission_Type = names(transmission.freq),
Count = as.numeric(transmission.freq),
Percentage = round(as.numeric(transmission.ptc), 2))
kable(transmission.tbl, caption = "Distribution of Transmission Types")
barplot(transmission.freq,
xlab = "Transmission Type",
ylab = "Frequency",
axes = FALSE)
axis(2)
owner.freq <- table(cars.df$owner)
owner.pct <- prop.table(owner.freq) * 100
owner.tbl <- data.frame(Owner_Type = names(owner.freq),
Count = as.numeric(owner.freq),
Percentage = round(as.numeric(owner.pct), 2))
kable(owner.tbl, caption = "Distribution of Owner Types")
barplot(owner.freq,
xlab = "Owner Type",
ylab = "Frequency",
axes = FALSE)
axis(2)
seats.freq <- table(cars.df$seats)
seats.pct <- prop.table(seats.freq) * 100
seats.tbl <- data.frame(Seat_Number = names(seats.freq),
Count = as.numeric(seats.freq),
Percentage = round(as.numeric(seats.pct), 2))
kable(seats.tbl, caption = "Distribution of Number of Seats")
barplot(seats.freq,
xlab = "Number of Seats",
ylab = "Frequency",
axes = FALSE)
axis(2)
fit.technical <- lm(selling_price ~ km_driven + mileage + engine + max_power, data = cars.df)
coef_vals <- coef(summary(fit.technical))
kable(coef_vals)
summary(lm(selling_price ~ ., data = cars.df))
summary(fit.technical)
fit.all <- lm(selling_price ~ ., data = cars.df)
coef_vals2 <- coef(summary(fit.all))
kable(coef_vals2)
fit.all <- lm(selling_price ~ ., data = cars.df)
coef_vals2 <- coef(summary(fit.all))
coef_vals2 <- format(coef_vals2, scientific = FALSE)
kable(coef_vals2)
fit.all <- lm(selling_price ~ ., data = cars.df)
coef_vals2 <- coef(summary(fit.all))
kable(coef_vals2)
# all library load statements here
library(caret)
library(knitr)
library(scales)
r.version <- "4.3.2"
seed.val <- 123456
cars.df <- read.csv("dataset3-3.csv")
cars.df <- na.omit(cars.df)
cars.df$seller_type <- factor(cars.df$seller_type)
cars.df$transmission <- factor(cars.df$transmission)
cars.df$owner <- factor(cars.df$owner,
levels = c("First Owner", "Second Owner", "Third Owner", "Fourth & Above Owner"))
cars.df$seats <- factor(cars.df$seats)
sum_stats <- summary(cars.df$selling_price)
summary_tbl <- data.frame(Statistic = names(sum_stats),
Value = as.numeric(sum_stats))
summary_tbl$Value <- format(summary_tbl$Value, scientific = FALSE, big.mark = ",")
kable(summary_tbl, caption = "Summary Statistics for Selling Price")
hist(cars.df$selling_price, freq = FALSE,
main = "",
xlab = "Selling Price (USD)",
breaks = 20,
axes = FALSE)
axis(1, at = axTicks(1), labels = comma(axTicks(1)))
axis(2)
lines(density(cars.df$selling_price), col = "blue", lwd = 2)
seller_freq <- table(cars.df$seller_type)
seller_pct <- prop.table(seller_freq) * 100
seller_tbl <- data.frame(Seller_Type = names(seller_freq),
Count = as.numeric(seller_freq),
Percentage = round(as.numeric(seller_pct), 2))
kable(seller_tbl, caption = "Distribution of Seller Types")
barplot(seller_freq,
xlab = "Seller Type",
ylab = "Frequency",
axes = FALSE)
axis(2)
transmission.freq <- table(cars.df$transmission)
transmission.ptc <- prop.table(transmission.freq) * 100
transmission.tbl <- data.frame(Transmission_Type = names(transmission.freq),
Count = as.numeric(transmission.freq),
Percentage = round(as.numeric(transmission.ptc), 2))
kable(transmission.tbl, caption = "Distribution of Transmission Types")
barplot(transmission.freq,
xlab = "Transmission Type",
ylab = "Frequency",
axes = FALSE)
axis(2)
owner.freq <- table(cars.df$owner)
owner.pct <- prop.table(owner.freq) * 100
owner.tbl <- data.frame(Owner_Type = names(owner.freq),
Count = as.numeric(owner.freq),
Percentage = round(as.numeric(owner.pct), 2))
kable(owner.tbl, caption = "Distribution of Owner Types")
barplot(owner.freq,
xlab = "Owner Type",
ylab = "Frequency",
axes = FALSE)
axis(2)
seats.freq <- table(cars.df$seats)
seats.pct <- prop.table(seats.freq) * 100
seats.tbl <- data.frame(Seat_Number = names(seats.freq),
Count = as.numeric(seats.freq),
Percentage = round(as.numeric(seats.pct), 2))
kable(seats.tbl, caption = "Distribution of Number of Seats")
barplot(seats.freq,
xlab = "Number of Seats",
ylab = "Frequency",
axes = FALSE)
axis(2)
fit.technical <- lm(selling_price ~ km_driven + mileage + engine + max_power, data = cars.df)
tech_summary <- summary(fit.technical)
tech_coef <- as.data.frame(coef(summary(fit.technical)))
tech_coef$Variable <- rownames(tech_coef)
tech_coef <- tech_coef[, c(5, 1:4)]
colnames(tech_coef) <- c("Variable", "Estimate", "Std. Error", "t-value", "p-value")
tech_coef[, 2:5] <- round(tech_coef[, 2:5], 4)
kable(tech_coef, caption = "Technical Characteristics Model Coefficients")
adjrsq <- summary(fit.technical)$adj.r.squared[1]
formatted.str <- sprintf("The adjusted R-squared for this model was %.4f.", adjrsq)
cat(formatted.str)
par(mfrow=c(1,2))
hist(fit.technical$residuals, freq = FALSE, main = "", xlab = "Residuals")
lines(density(fit.technical$residuals))
qqnorm(y=fit.technical$residuals, main = "")
qqline(y=fit.technical$residuals, datax = FALSE)
fit.comprehensive <- lm(selling_price ~ ., data = cars.df)
comp_summary <- summary(fit.comprehensive)
key_vars <- c("km_driven", "mileage", "engine", "max_power", "transmissionManual",
"ownerSecond Owner", "ownerThird Owner", "ownerFourth & Above Owner")
comp_coef <- as.data.frame(coef(summary(fit.comprehensive)))
comp_coef$Variable <- rownames(comp_coef)
key_coef <- comp_coef[comp_coef$Variable %in% key_vars, ]
key_coef <- key_coef[, c(5, 1:4)]
colnames(key_coef) <- c("Variable", "Estimate", "Std. Error", "t-value", "p-value")
key_coef[, 2:5] <- round(key_coef[, 2:5], 4)
kable(key_coef, caption = "Key Coefficients from Comprehensive Model")
adjrsq <- summary(fit.comprehensive)$adj.r.squared[1]
formatted.str <- sprintf("The adjusted R-squared for this model was %.4f, which is greater than the value for the first model, indicating that the inclusion of market factors helped the model explain more of the variance.", adjrsq)
cat(formatted.str)
par(mfrow=c(1,2))
hist(fit.comprehensive$residuals, freq = FALSE, main = "", xlab = "Residuals")
lines(density(fit.comprehensive$residuals))
qqnorm(y=fit.comprehensive$residuals, main = "")
qqline(y=fit.comprehensive$residuals, datax = FALSE)
fit.comprehensive <- lm(selling_price ~ ., data = cars.df)
comp_summary <- summary(fit.comprehensive)
key_vars <- c("km_driven", "mileage", "engine", "max_power", "transmissionManual",
"ownerSecond Owner", "ownerThird Owner", "ownerFourth & Above Owner")
comp_coef <- as.data.frame(coef(summary(fit.comprehensive)))
comp_coef$Variable <- rownames(comp_coef)
key_coef <- comp_coef[comp_coef$Variable %in% key_vars, ]
key_coef <- key_coef[, c(5, 1:4)]
colnames(key_coef) <- c("Variable", "Estimate", "Std. Error", "t-value", "p-value")
key_coef[, 2:5] <- round(key_coef[, 2:5], 4)
kable(key_coef, row.names = FALSE caption = "Key Coefficients from Comprehensive Model")
fit.comprehensive <- lm(selling_price ~ ., data = cars.df)
comp_summary <- summary(fit.comprehensive)
key_vars <- c("km_driven", "mileage", "engine", "max_power", "transmissionManual",
"ownerSecond Owner", "ownerThird Owner", "ownerFourth & Above Owner")
comp_coef <- as.data.frame(coef(summary(fit.comprehensive)))
comp_coef$Variable <- rownames(comp_coef)
key_coef <- comp_coef[comp_coef$Variable %in% key_vars, ]
key_coef <- key_coef[, c(5, 1:4)]
colnames(key_coef) <- c("Variable", "Estimate", "Std. Error", "t-value", "p-value")
key_coef[, 2:5] <- round(key_coef[, 2:5], 4)
kable(key_coef, row.names = FALSE, caption = "Key Coefficients from Comprehensive Model")
fit.technical <- lm(selling_price ~ km_driven + mileage + engine + max_power, data = cars.df)
tech_summary <- summary(fit.technical)
tech_coef <- as.data.frame(coef(summary(fit.technical)))
tech_coef$Variable <- rownames(tech_coef)
tech_coef <- tech_coef[, c(5, 1:4)]
colnames(tech_coef) <- c("Variable", "Estimate", "Std. Error", "t-value", "p-value")
tech_coef[, 2:5] <- round(tech_coef[, 2:5], 4)
kable(tech_coef, row.names = FALSE, caption = "Technical Characteristics Model Coefficients")
adjrsq <- summary(fit.technical)$adj.r.squared[1]
formatted.str <- sprintf("The adjusted R-squared for this model was %.4f, which is a reasonably good fit.", adjrsq)
cat(formatted.str)
par(mfrow=c(1,2))
hist(fit.technical$residuals, freq = FALSE, main = "", xlab = "Residuals")
lines(density(fit.technical$residuals))
qqnorm(y=fit.technical$residuals, main = "")
qqline(y=fit.technical$residuals, datax = FALSE)
par(mfrow=c(1,2))
hist(fit.comprehensive$residuals, freq = FALSE, main = "", xlab = "Residuals")
lines(density(fit.comprehensive$residuals))
qqnorm(y=fit.comprehensive$residuals, main = "")
qqline(y=fit.comprehensive$residuals, datax = FALSE)
fit.comprehensive <- lm(selling_price ~ ., data = cars.df)
comp_summary <- summary(fit.comprehensive)
key_vars <- c("km_driven", "mileage", "engine", "max_power", "transmissionManual",
"ownerSecond Owner", "ownerThird Owner", "ownerFourth & Above Owner", "seats5", "seats6", "seats7", "seats8")
comp_coef <- as.data.frame(coef(summary(fit.comprehensive)))
comp_coef$Variable <- rownames(comp_coef)
key_coef <- comp_coef[comp_coef$Variable %in% key_vars, ]
key_coef <- key_coef[, c(5, 1:4)]
colnames(key_coef) <- c("Variable", "Estimate", "Std. Error", "t-value", "p-value")
key_coef[, 2:5] <- round(key_coef[, 2:5], 4)
kable(key_coef, row.names = FALSE, caption = "Key Coefficients from Comprehensive Model")
fit.comprehensive <- lm(selling_price ~ ., data = cars.df)
comp_summary <- summary(fit.comprehensive)
key_vars <- c("km_driven", "seller_typeIndividual", "mileage", "engine", "max_power", "transmissionManual",
"ownerSecond Owner", "ownerThird Owner", "ownerFourth & Above Owner", "seats5", "seats6", "seats7", "seats8")
comp_coef <- as.data.frame(coef(summary(fit.comprehensive)))
comp_coef$Variable <- rownames(comp_coef)
key_coef <- comp_coef[comp_coef$Variable %in% key_vars, ]
key_coef <- key_coef[, c(5, 1:4)]
colnames(key_coef) <- c("Variable", "Estimate", "Std. Error", "t-value", "p-value")
key_coef[, 2:5] <- round(key_coef[, 2:5], 4)
kable(key_coef, row.names = FALSE, caption = "Key Coefficients from Comprehensive Model")
train.control <- trainControl(method = "cv", number = 10, p= 0.80)
# all library load statements here
library(caret)
library(knitr)
library(scales)
r.version <- "4.3.2"
seed.val <- 123456
train.control <- trainControl(method = "cv", number = 10, p= 0.80)
RNGversion(r.version)
set.seed(seed.val)
fit.technical.train <- train(selling_price ~ km_driven + mileage + engine + max_power, data = cars.df, method= "lm", trControl = train.control)
fit.comprehensive.train <- train(selling_price ~ ., data = cars.df, method = "lm", trControl = train.control)
num_folds <- 10
rmse.technical <- fit.technical$resample$RMSE
rmse.comprehensive <- fit.comprehensive$resample$RMSE
plot(rmse.technical,
xlab="fold",
xaxp = c(1, num.folds, num.folds-1),
ylab="rmse",
ylim=c(min(rmse.two), max(rmse.one)),
col = "darkgreen")
num_folds <- 10
rmse.technical <- fit.technical$resample$RMSE
rmse.comprehensive <- fit.comprehensive$resample$RMSE
plot(rmse.technical,
xlab="fold",
xaxp = c(1, num.folds, num.folds-1),
ylab="rmse",
ylim=c(min(rmse.comprehensive), max(rmse.technical)),
col = "darkgreen")
num_folds <- 10
rmse.technical <- fit.technical.train$resample$RMSE
rmse.comprehensive <- fit.comprehensive.train$resample$RMSE
plot(rmse.technical,
xlab="fold",
xaxp = c(1, num.folds, num.folds-1),
ylab="rmse",
ylim=c(min(rmse.comprehensive), max(rmse.technical)),
col = "darkgreen")
num_folds <- 10
rmse.technical <- fit.technical.train$resample$RMSE
rmse.comprehensive <- fit.comprehensive.train$resample$RMSE
plot(rmse.technical,
xlab="fold",
xaxp = c(1, num_folds, num_folds-1),
ylab="rmse",
ylim=c(min(rmse.comprehensive), max(rmse.technical)),
col = "darkgreen")
lines(rmse.technical, col= "darkgreen")
points(rmse.comprehensive, col = "orange")
lines(rmse.comprehensive, col = "orange", lty = 2)
legend("bottomright", legend = c("Model 1", "Model 2"), col = c("darkgreen", "orange"), lty=1:2, cex = 0.5)
label = c("Model 1", "Model 2")
avg.rmse.tech <- round(mean(rmse.technical), 2)
avg.rmse.comp <- round(mean(rmse.comprehensive), 2)
rmse <- c(avg.rmse.comp, avg.rmse.tech)
rmse.tbl <- cbind(Label, RMSE)
label = c("Model 1", "Model 2")
avg.rmse.tech <- round(mean(rmse.technical), 2)
avg.rmse.comp <- round(mean(rmse.comprehensive), 2)
rmse <- c(avg.rmse.comp, avg.rmse.tech)
rmse.tbl <- cbind(label, RMSE)
kable(rmse.tbl, caption = "Mean RMSE for Models 1 & 2." )
label <- c("Model 1", "Model 2")
avg.rmse.tech <-round(mean(rmse.technical),2)
avg.rmse.comp <-round(mean(rmse.comprehensive),2)
rmse <- c(avg.rmse.tech, avg.rmse.comp)
imb.tbl <- cbind(label, rmse)
kable(imb.tbl, caption="Mean RMSE for Models 1 and 2.")
fit.comprehensive <- lm(selling_price ~ ., data = cars.df)
comp_summary <- summary(fit.comprehensive)
key_vars <- c("(Intercept", "km_driven", "seller_typeIndividual", "mileage", "engine", "max_power", "transmissionManual",
"ownerSecond Owner", "ownerThird Owner", "ownerFourth & Above Owner", "seats5", "seats6", "seats7", "seats8")
comp_coef <- as.data.frame(coef(summary(fit.comprehensive)))
comp_coef$Variable <- rownames(comp_coef)
key_coef <- comp_coef[comp_coef$Variable %in% key_vars, ]
key_coef <- key_coef[, c(5, 1:4)]
colnames(key_coef) <- c("Variable", "Estimate", "Std. Error", "t-value", "p-value")
key_coef[, 2:5] <- round(key_coef[, 2:5], 4)
kable(key_coef, row.names = FALSE, caption = "Key Coefficients from Comprehensive Model")
fit.technical <- lm(selling_price ~ km_driven + mileage + engine + max_power, data = cars.df)
coef_vals <- round(coef(summary(fit.technical)), 4)
kable(coef_vals, caption = "Technical Model Coefficients")
fit.technical <- lm(selling_price ~ km_driven + mileage + engine + max_power + engine:max_power, data = cars.df)
coef_vals <- round(coef(summary(fit.technical)), 4)
kable(coef_vals, caption = "Technical Model Coefficients")
adjrsq <- summary(fit.technical)$adj.r.squared[1]
formatted.str <- sprintf("The adjusted R-squared for this model was %.4f, which is a reasonably good fit.", adjrsq)
cat(formatted.str)
par(mfrow=c(1,2))
hist(fit.technical$residuals, freq = FALSE, main = "", xlab = "Residuals")
lines(density(fit.technical$residuals))
qqnorm(y=fit.technical$residuals, main = "")
qqline(y=fit.technical$residuals, datax = FALSE)
fit.comprehensive <- lm(selling_price ~ ., data = cars.df)
coef_vals2 <- round(coef(summary(fit.all)), 4)
fit.comprehensive <- lm(selling_price ~ ., data = cars.df)
coef_vals2 <- round(coef(summary(fit.comprehensive)), 4)
kable(coef_vals2, caption = "Comprehenive Model Coefficients")
adjrsq <- summary(fit.comprehensive)$adj.r.squared[1]
formatted.str <- sprintf("The adjusted R-squared for this model was %.4f, which is greater than the value for the first model, indicating that the inclusion of market factors helped the model explain more of the variance.", adjrsq)
cat(formatted.str)
par(mfrow=c(1,2))
hist(fit.comprehensive$residuals, freq = FALSE, main = "", xlab = "Residuals")
lines(density(fit.comprehensive$residuals))
qqnorm(y=fit.comprehensive$residuals, main = "")
qqline(y=fit.comprehensive$residuals, datax = FALSE)
fit.technical <- lm(selling_price ~ km_driven + mileage + engine + max_power + engine:max_power, data = cars.df)
coef_vals <- round(coef(summary(fit.technical)), 4)
kable(coef_vals, caption = "Technical Model Coefficients")
adjrsq <- summary(fit.technical)$adj.r.squared[1]
formatted.str <- sprintf("The adjusted R-squared for this model was %.4f, which is a reasonably good fit.", adjrsq)
cat(formatted.str)
par(mfrow=c(1,2))
hist(fit.technical$residuals, freq = FALSE, main = "", xlab = "Residuals")
lines(density(fit.technical$residuals))
qqnorm(y=fit.technical$residuals, main = "")
qqline(y=fit.technical$residuals, datax = FALSE)
train.control <- trainControl(method = "cv", number = 10, p= 0.80)
RNGversion(r.version)
set.seed(seed.val)
fit.technical.train <- train(selling_price ~ km_driven + mileage + engine + max_power, data = cars.df, method= "lm", trControl = train.control)
fit.comprehensive.train <- train(selling_price ~ ., data = cars.df, method = "lm", trControl = train.control)
num_folds <- 10
rmse.technical <- fit.technical.train$resample$RMSE
rmse.comprehensive <- fit.comprehensive.train$resample$RMSE
plot(rmse.technical,
xlab="fold",
xaxp = c(1, num_folds, num_folds-1),
ylab="rmse",
ylim=c(min(rmse.comprehensive), max(rmse.technical)),
col = "darkgreen")
lines(rmse.technical, col= "darkgreen")
points(rmse.comprehensive, col = "orange")
lines(rmse.comprehensive, col = "orange", lty = 2)
legend("bottomright", legend = c("Model 1", "Model 2"), col = c("darkgreen", "orange"), lty=1:2, cex = 0.5)
label <- c("Model 1", "Model 2")
avg.rmse.tech <-round(mean(rmse.technical),2)
avg.rmse.comp <-round(mean(rmse.comprehensive),2)
rmse <- c(avg.rmse.tech, avg.rmse.comp)
imb.tbl <- cbind(label, rmse)
kable(imb.tbl, caption="Mean RMSE for Models 1 and 2.")
summary(fit.comprehensive)
adjrsq <- summary(fit.comprehensive)$adj.r.squared[1]
formatted.str <- sprintf("The adjusted R-squared for this model was %.4f, which is greater than the value for the first model, indicating that the inclusion of market factors helped the model explain more of the variance.", adjrsq)
cat(formatted.str)
summary(fit.technical)
adjrsq <- summary(fit.comprehensive)$adj.r.squared[1]
formatted.str <- sprintf("The adjusted R-squared for this model was %.4f, which is less than the value for the first model, indicating that the inclusion of market factors didn't help the model explain more of the variance.", adjrsq)
cat(formatted.str)
par(mfrow=c(1,2))
hist(fit.technical$residuals, freq = FALSE, main = "", xlab = "Residuals", axes = FALSE)
lines(density(fit.technical$residuals))
qqnorm(y=fit.technical$residuals, main = "")
qqline(y=fit.technical$residuals, datax = FALSE)
par(mfrow=c(1,2))
hist(fit.technical$residuals, freq = FALSE, main = "", xlab = "Residuals", axes = FALSE)
axis(1, at = axTicks(1), labels = comma(axTicks(1)))
axis(2)
lines(density(fit.technical$residuals))
qqnorm(y=fit.technical$residuals, main = "")
qqline(y=fit.technical$residuals, datax = FALSE)
par(mfrow=c(1,2))
hist(fit.technical$residuals, freq = FALSE, main = "", xlab = "Residuals")
lines(density(fit.technical$residuals))
qqnorm(y=fit.technical$residuals, main = "")
qqline(y=fit.technical$residuals, datax = FALSE)
par(mfrow=c(1,2))
hist(fit.technical$residuals, freq = FALSE, main = "", xlab = "Residuals")
lines(density(fit.technical$residuals))
qqnorm(y=fit.technical$residuals, main = "")
qqline(y=fit.technical$residuals, datax = FALSE)
par(mfrow=c(1,2))
hist(fit.comprehensive$residuals, freq = FALSE, main = "", xlab = "Residuals")
lines(density(fit.comprehensive$residuals))
qqnorm(y=fit.comprehensive$residuals, main = "")
qqline(y=fit.comprehensive$residuals, datax = FALSE)
label <- c("Model 1", "Model 2")
avg.rmse.tech <-round(mean(rmse.technical),2)
avg.rmse.comp <-round(mean(rmse.comprehensive),2)
rmse <- c(avg.rmse.tech, avg.rmse.comp)
imb.tbl <- cbind(label, rmse)
kable(imb.tbl, caption="Mean RMSE for Models 1 and 2.")
par(mfrow=c(1,2))
hist(fit.comprehensive$residuals, freq = FALSE, main = "", xlab = "Residuals")
lines(density(fit.comprehensive$residuals))
qqnorm(y=fit.comprehensive$residuals, main = "")
qqline(y=fit.comprehensive$residuals, datax = FALSE)
adjrsq <- summary(fit.comprehensive)$adj.r.squared[1]
formatted.str <- sprintf("The adjusted R-squared for this model was %.4f, which is less than the value for the first model, indicating that the inclusion of market factors didn't help the model explain more of the variance.", adjrsq)
cat(formatted.str)
par(mfrow=c(1,2))
hist(fit.technical$residuals, freq = FALSE, main = "", xlab = "Residuals")
lines(density(fit.technical$residuals))
qqnorm(y=fit.technical$residuals, main = "")
qqline(y=fit.technical$residuals, datax = FALSE)
library(caret) # for cross validation
library(knitr) # for kable
r.version <- "4.3.2"
seed.val <- 123456
life.df <- read.csv("Life_Expectancy_Data.csv")
life.df <- na.omit(life.df)
life.df$Status <- factor(life.df$Status)
label <- c("Developed", "Developing")
count <- c("339", "2036")
imb.tbl <- cbind(label, count)
kable(imb.tbl, caption="Developed vs Developing Countries.")
hist(life.df$Life_expectancy, freq = FALSE, # freq = FALSE for density scale on y-axis
main = "", # turn off the title as using the fig.cap
xlab = "Value",
ylab = "Density")
lines(density(life.df$Life_expectancy), col = "blue", lwd = 2)
# table of descriptive stats for the overall life expectancy
statistic <- c("Min", "Mean","Median","StdDev","Max")
data<-life.df$Life_expectancy
mn<-min(data)
mx<-max(data)
avg<-round(mean(data), 2)
md<-median(data)
std<-round(sd(data), 2)
value <- c(mn,avg,md,std,mx)
st.tbl <- cbind(statistic, value)
kable(st.tbl, caption="Overall Life Expectancy Descriptive Stats")
developed.df <- life.df[life.df$Status == 'Developed',]
developing.df <- life.df[life.df$Status == 'Developing',]
plot(density(developed.df$Life_expectancy), main="")
lines(density(developing.df$Life_expectancy),col='red')
legend("topright",
legend = c("Developed", "Developing"),
col = c("black", "red"),
lty = 1)
# table of descriptive stats for the overall life expectancy
statistic <- c("Min", "Mean","Median","StdDev","Max")
#developed
data1<-developed.df$Life_expectancy
mn1<-min(data1)
mx1<-max(data1)
avg1<-round(mean(data1), 2)
md1<-median(data1)
std1<-round(sd(data1), 2)
developed <- c(mn1,avg1,md1,std1,mx1)
#developing
data2<-developing.df$Life_expectancy
mn2<-min(data2)
mx2<-max(data2)
avg2<-round(mean(data2), 2)
md2<-median(data2)
std2<-round(sd(data2), 2)
developing <- c(mn2,avg2,md2,std2,mx2)
tble.df<- data.frame(statistic, developed, developing)
kable(tble.df, caption="Life Expectancy per Status Descriptive Stats")
